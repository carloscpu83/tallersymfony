# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

imports:
    # glob expressions are also supported to load multiple files
    #- { resource: '/etc/myapp/*.yaml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            # Podemos hacer que todas las entradas a servicios con el nombre $predisClient no tengamos que escribirlas puesto que las resuelve de forma automatica.
            # $predisClient: '@snc_redis.default'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    #########################################################################################################################################
    ######################## Controladores
    #########################################################################################################################################
    App\Controller\:
        resource: '../src/Controller/*'
        # Agrega a los controladores los servicios de forma automatica
        tags: ['controller.service_arguments']

    #########################################################################################################################################
    ######################## Pruebas con servicios
    #########################################################################################################################################
    App\Services\ServicioConAlias:
        arguments:
            $valorString: '%env(PARAMETRO_CADENA)%'
            $valorEntero: '%env(PARMETRO_ENTERO)%'

    servicio.alias:
        # Permite que la clase ServicioConAlias pueda llamarse como servicio.alias desde el contenedor, o como @servicio.alias desde este archivo
        alias: App\Services\ServicioConAlias
        public: true


    #########################################################################################################################################
    ######################## Redis
    #########################################################################################################################################
    App\Services\Redis\AgregarClaveValorRedis:
        arguments:
            $predisClient: '@snc_redis.default'

    App\Services\Redis\RecuperarClaveValorRedis:
        arguments:
            $predisClient: '@snc_redis.default'

    App\Services\Redis\EliminarRedis:
        arguments:
            $predisClient: '@snc_redis.default'

    App\Services\Redis\PublicarMensaje:
        arguments:
            $predisClient: '@snc_redis.default'
            $canal: '%env(REDIS_CHANEL)%'

    App\Command\AppConsumidorRedisCommand:
        arguments:
            $predisClient: '@snc_redis.default'
            $canal: '%env(REDIS_CHANEL)%'

    #########################################################################################################################################
    ######################## Comandos de consola
    #########################################################################################################################################

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
